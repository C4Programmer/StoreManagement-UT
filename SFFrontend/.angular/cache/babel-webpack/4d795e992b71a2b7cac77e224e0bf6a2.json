{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { User } from '../model/user';\nimport { NotificationType } from '../enum/notification-type.enum';\nimport { HttpEventType } from '@angular/common/http';\nimport { FileUploadStatus } from '../model/file-upload.status';\nimport { Role } from '../enum/role.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../service/authentication.service\";\nimport * as i3 from \"../service/user.service\";\nimport * as i4 from \"../service/notification.service\";\nexport class UserComponent {\n  constructor(router, authenticationService, userService, notificationService) {\n    this.router = router;\n    this.authenticationService = authenticationService;\n    this.userService = userService;\n    this.notificationService = notificationService;\n    this.titleSubject = new BehaviorSubject('Users');\n    this.titleAction$ = this.titleSubject.asObservable();\n    this.subscriptions = [];\n    this.editUser = new User();\n    this.fileStatus = new FileUploadStatus();\n  }\n\n  ngOnInit() {\n    this.user = this.authenticationService.getUserFromLocalCache();\n    this.getUsers(true);\n  }\n\n  changeTitle(title) {\n    this.titleSubject.next(title);\n  }\n\n  getUsers(showNotification) {\n    this.refreshing = true;\n    this.subscriptions.push(this.userService.getUsers().subscribe(response => {\n      this.userService.addUsersToLocalCache(response);\n      this.users = response;\n      this.refreshing = false;\n\n      if (showNotification) {\n        this.sendNotification(NotificationType.SUCCESS, `${response.length} user(s) loaded successfully.`);\n      }\n    }, errorResponse => {\n      this.sendNotification(NotificationType.ERROR, errorResponse.error.message);\n      this.refreshing = false;\n    }));\n  }\n\n  onSelectUser(selectedUser) {\n    this.selectedUser = selectedUser;\n    this.clickButton('openUserInfo');\n  }\n\n  onProfileImageChange(fileName, profileImage) {\n    this.fileName = fileName;\n    this.profileImage = profileImage;\n  }\n\n  saveNewUser() {\n    this.clickButton('new-user-save');\n  }\n\n  onAddNewUser(userForm) {\n    const formData = this.userService.createUserFormDate(null, userForm.value, this.profileImage);\n    this.subscriptions.push(this.userService.addUser(formData).subscribe(response => {\n      this.clickButton('new-user-close');\n      this.getUsers(false);\n      this.fileName = null;\n      this.profileImage = null;\n      userForm.reset();\n      this.sendNotification(NotificationType.SUCCESS, `${response.firstName} ${response.lastName} added successfully`);\n    }, errorResponse => {\n      this.sendNotification(NotificationType.ERROR, errorResponse.error.message);\n      this.profileImage = null;\n    }));\n  }\n\n  onUpdateUser() {\n    const formData = this.userService.createUserFormDate(this.currentUsername, this.editUser, this.profileImage);\n    this.subscriptions.push(this.userService.updateUser(formData).subscribe(response => {\n      this.clickButton('closeEditUserModalButton');\n      this.getUsers(false);\n      this.fileName = null;\n      this.profileImage = null;\n      this.sendNotification(NotificationType.SUCCESS, `${response.firstName} ${response.lastName} updated successfully`);\n    }, errorResponse => {\n      this.sendNotification(NotificationType.ERROR, errorResponse.error.message);\n      this.profileImage = null;\n    }));\n  }\n\n  onUpdateCurrentUser(user) {\n    this.refreshing = true;\n    this.currentUsername = this.authenticationService.getUserFromLocalCache().username;\n    const formData = this.userService.createUserFormDate(this.currentUsername, user, this.profileImage);\n    this.subscriptions.push(this.userService.updateUser(formData).subscribe(response => {\n      this.authenticationService.addUserToLocalCache(response);\n      this.getUsers(false);\n      this.fileName = null;\n      this.profileImage = null;\n      this.sendNotification(NotificationType.SUCCESS, `${response.firstName} ${response.lastName} updated successfully`);\n    }, errorResponse => {\n      this.sendNotification(NotificationType.ERROR, errorResponse.error.message);\n      this.refreshing = false;\n      this.profileImage = null;\n    }));\n  }\n\n  onUpdateProfileImage() {\n    const formData = new FormData();\n    formData.append('username', this.user.username);\n    formData.append('profileImage', this.profileImage);\n    this.subscriptions.push(this.userService.updateProfileImage(formData).subscribe(event => {\n      this.reportUploadProgress(event);\n    }, errorResponse => {\n      this.sendNotification(NotificationType.ERROR, errorResponse.error.message);\n      this.fileStatus.status = 'done';\n    }));\n  }\n\n  reportUploadProgress(event) {\n    switch (event.type) {\n      case HttpEventType.UploadProgress:\n        this.fileStatus.percentage = Math.round(100 * event.loaded / event.total);\n        this.fileStatus.status = 'progress';\n        break;\n\n      case HttpEventType.Response:\n        if (event.status === 200) {\n          this.user.profileImageUrl = `${event.body.profileImageUrl}?time=${new Date().getTime()}`;\n          this.sendNotification(NotificationType.SUCCESS, `${event.body.firstName}\\'s profile image updated successfully`);\n          this.fileStatus.status = 'done';\n          break;\n        } else {\n          this.sendNotification(NotificationType.ERROR, `Unable to upload image. Please try again`);\n          break;\n        }\n\n      default:\n        `Finished all processes`;\n    }\n  }\n\n  updateProfileImage() {\n    this.clickButton('profile-image-input');\n  }\n\n  onLogOut() {\n    this.authenticationService.logOut();\n    this.router.navigate(['/login']);\n    this.sendNotification(NotificationType.SUCCESS, `You've been successfully logged out`);\n  }\n\n  onResetPassword(emailForm) {\n    this.refreshing = true;\n    const emailAddress = emailForm.value['reset-password-email'];\n    this.subscriptions.push(this.userService.resetPassword(emailAddress).subscribe(response => {\n      this.sendNotification(NotificationType.SUCCESS, response.message);\n      this.refreshing = false;\n    }, error => {\n      this.sendNotification(NotificationType.WARNING, error.error.message);\n      this.refreshing = false;\n    }, () => emailForm.reset()));\n  }\n\n  onDeleteUder(username) {\n    this.subscriptions.push(this.userService.deleteUser(username).subscribe(response => {\n      this.sendNotification(NotificationType.SUCCESS, response.message);\n      this.getUsers(false);\n    }, error => {\n      this.sendNotification(NotificationType.ERROR, error.error.message);\n    }));\n  }\n\n  onEditUser(editUser) {\n    this.editUser = editUser;\n    this.currentUsername = editUser.username;\n    this.clickButton('openUserEdit');\n  }\n\n  searchUsers(searchTerm) {\n    const results = [];\n\n    for (const user of this.userService.getUsersFromLocalCache()) {\n      if (user.firstName.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1 || user.lastName.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1 || user.username.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1 || user.userId.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1) {\n        results.push(user);\n      }\n    }\n\n    this.users = results;\n\n    if (results.length === 0 || !searchTerm) {\n      this.users = this.userService.getUsersFromLocalCache();\n    }\n  }\n\n  get isAdmin() {\n    return this.getUserRole() === Role.ADMIN || this.getUserRole() === Role.SUPER_ADMIN;\n  }\n\n  get isManager() {\n    return this.isAdmin || this.getUserRole() === Role.MANAGER;\n  }\n\n  get isAdminOrManager() {\n    return this.isAdmin || this.isManager;\n  }\n\n  getUserRole() {\n    return this.authenticationService.getUserFromLocalCache().role;\n  }\n\n  sendNotification(notificationType, message) {\n    if (message) {\n      this.notificationService.notify(notificationType, message);\n    } else {\n      this.notificationService.notify(notificationType, 'An error occurred. Please try again.');\n    }\n  }\n\n  clickButton(buttonId) {\n    document.getElementById(buttonId).click();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n}\n\nUserComponent.ɵfac = function UserComponent_Factory(t) {\n  return new (t || UserComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthenticationService), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.NotificationService));\n};\n\nUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserComponent,\n  selectors: [[\"app-user\"]],\n  decls: 2,\n  vars: 0,\n  template: function UserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"user works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 562:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nSyntaxError\\\\n\\\\n(7:55) C:\\\\\\\\Users\\\\\\\\Asus\\\\\\\\Desktop\\\\\\\\Projects\\\\\\\\UT\\\\\\\\SFinances-SE\\\\\\\\SFFrontend\\\\\\\\src\\\\\\\\app\\\\\\\\user\\\\\\\\user.component.css Unknown word\\\\n\\\\n \\\\u001b[90m 5 | \\\\u001b[39m    <div class=\\\\u001b[32m\\\\\\\"col-md-4\\\\\\\"\\\\u001b[39m>\\\\n \\\\u001b[90m 6 | \\\\u001b[39m      <h5>User Management Portal</h5>\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 7 | \\\\u001b[39m      <small *ngIf=\\\\u001b[32m\\\\\\\"titleAction$ | async as title\\\\\\\"\\\\u001b[39m>\\\\u001b[33m{\\\\u001b[39m\\\\u001b[33m{\\\\u001b[39m title \\\\u001b[33m}\\\\u001b[39m\\\\u001b[33m}\\\\u001b[39m</small>\\\\n \\\\u001b[90m   | \\\\u001b[39m                                                      \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 8 | \\\\u001b[39m    </div>\\\\n \\\\u001b[90m 9 | \\\\u001b[39m    <div class=\\\\u001b[32m\\\\\\\"col-md-4\\\\\\\"\\\\u001b[39m>\\\\n\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[562]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=user.component.css.map*/\"]\n});","map":{"version":3,"sources":["C:/Users/Asus/Desktop/Projects/UT/SFinances-SE/SFFrontend/src/app/user/user.component.ts"],"names":["BehaviorSubject","User","NotificationType","HttpEventType","FileUploadStatus","Role","i0","i1","i2","i3","i4","UserComponent","constructor","router","authenticationService","userService","notificationService","titleSubject","titleAction$","asObservable","subscriptions","editUser","fileStatus","ngOnInit","user","getUserFromLocalCache","getUsers","changeTitle","title","next","showNotification","refreshing","push","subscribe","response","addUsersToLocalCache","users","sendNotification","SUCCESS","length","errorResponse","ERROR","error","message","onSelectUser","selectedUser","clickButton","onProfileImageChange","fileName","profileImage","saveNewUser","onAddNewUser","userForm","formData","createUserFormDate","value","addUser","reset","firstName","lastName","onUpdateUser","currentUsername","updateUser","onUpdateCurrentUser","username","addUserToLocalCache","onUpdateProfileImage","FormData","append","updateProfileImage","event","reportUploadProgress","status","type","UploadProgress","percentage","Math","round","loaded","total","Response","profileImageUrl","body","Date","getTime","onLogOut","logOut","navigate","onResetPassword","emailForm","emailAddress","resetPassword","WARNING","onDeleteUder","deleteUser","onEditUser","searchUsers","searchTerm","results","getUsersFromLocalCache","toLowerCase","indexOf","userId","isAdmin","getUserRole","ADMIN","SUPER_ADMIN","isManager","MANAGER","isAdminOrManager","role","notificationType","notify","buttonId","document","getElementById","click","ngOnDestroy","forEach","sub","unsubscribe","ɵfac","UserComponent_Factory","t","ɵɵdirectiveInject","Router","AuthenticationService","UserService","NotificationService","ɵcmp","ɵɵdefineComponent","selectors","decls","vars","template","UserComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","styles"],"mappings":"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","sourcesContent":["import { BehaviorSubject } from 'rxjs';\r\nimport { User } from '../model/user';\r\nimport { NotificationType } from '../enum/notification-type.enum';\r\nimport { HttpEventType } from '@angular/common/http';\r\nimport { FileUploadStatus } from '../model/file-upload.status';\r\nimport { Role } from '../enum/role.enum';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/router\";\r\nimport * as i2 from \"../service/authentication.service\";\r\nimport * as i3 from \"../service/user.service\";\r\nimport * as i4 from \"../service/notification.service\";\r\nexport class UserComponent {\r\n    constructor(router, authenticationService, userService, notificationService) {\r\n        this.router = router;\r\n        this.authenticationService = authenticationService;\r\n        this.userService = userService;\r\n        this.notificationService = notificationService;\r\n        this.titleSubject = new BehaviorSubject('Users');\r\n        this.titleAction$ = this.titleSubject.asObservable();\r\n        this.subscriptions = [];\r\n        this.editUser = new User();\r\n        this.fileStatus = new FileUploadStatus();\r\n    }\r\n    ngOnInit() {\r\n        this.user = this.authenticationService.getUserFromLocalCache();\r\n        this.getUsers(true);\r\n    }\r\n    changeTitle(title) {\r\n        this.titleSubject.next(title);\r\n    }\r\n    getUsers(showNotification) {\r\n        this.refreshing = true;\r\n        this.subscriptions.push(this.userService.getUsers().subscribe((response) => {\r\n            this.userService.addUsersToLocalCache(response);\r\n            this.users = response;\r\n            this.refreshing = false;\r\n            if (showNotification) {\r\n                this.sendNotification(NotificationType.SUCCESS, `${response.length} user(s) loaded successfully.`);\r\n            }\r\n        }, (errorResponse) => {\r\n            this.sendNotification(NotificationType.ERROR, errorResponse.error.message);\r\n            this.refreshing = false;\r\n        }));\r\n    }\r\n    onSelectUser(selectedUser) {\r\n        this.selectedUser = selectedUser;\r\n        this.clickButton('openUserInfo');\r\n    }\r\n    onProfileImageChange(fileName, profileImage) {\r\n        this.fileName = fileName;\r\n        this.profileImage = profileImage;\r\n    }\r\n    saveNewUser() {\r\n        this.clickButton('new-user-save');\r\n    }\r\n    onAddNewUser(userForm) {\r\n        const formData = this.userService.createUserFormDate(null, userForm.value, this.profileImage);\r\n        this.subscriptions.push(this.userService.addUser(formData).subscribe((response) => {\r\n            this.clickButton('new-user-close');\r\n            this.getUsers(false);\r\n            this.fileName = null;\r\n            this.profileImage = null;\r\n            userForm.reset();\r\n            this.sendNotification(NotificationType.SUCCESS, `${response.firstName} ${response.lastName} added successfully`);\r\n        }, (errorResponse) => {\r\n            this.sendNotification(NotificationType.ERROR, errorResponse.error.message);\r\n            this.profileImage = null;\r\n        }));\r\n    }\r\n    onUpdateUser() {\r\n        const formData = this.userService.createUserFormDate(this.currentUsername, this.editUser, this.profileImage);\r\n        this.subscriptions.push(this.userService.updateUser(formData).subscribe((response) => {\r\n            this.clickButton('closeEditUserModalButton');\r\n            this.getUsers(false);\r\n            this.fileName = null;\r\n            this.profileImage = null;\r\n            this.sendNotification(NotificationType.SUCCESS, `${response.firstName} ${response.lastName} updated successfully`);\r\n        }, (errorResponse) => {\r\n            this.sendNotification(NotificationType.ERROR, errorResponse.error.message);\r\n            this.profileImage = null;\r\n        }));\r\n    }\r\n    onUpdateCurrentUser(user) {\r\n        this.refreshing = true;\r\n        this.currentUsername = this.authenticationService.getUserFromLocalCache().username;\r\n        const formData = this.userService.createUserFormDate(this.currentUsername, user, this.profileImage);\r\n        this.subscriptions.push(this.userService.updateUser(formData).subscribe((response) => {\r\n            this.authenticationService.addUserToLocalCache(response);\r\n            this.getUsers(false);\r\n            this.fileName = null;\r\n            this.profileImage = null;\r\n            this.sendNotification(NotificationType.SUCCESS, `${response.firstName} ${response.lastName} updated successfully`);\r\n        }, (errorResponse) => {\r\n            this.sendNotification(NotificationType.ERROR, errorResponse.error.message);\r\n            this.refreshing = false;\r\n            this.profileImage = null;\r\n        }));\r\n    }\r\n    onUpdateProfileImage() {\r\n        const formData = new FormData();\r\n        formData.append('username', this.user.username);\r\n        formData.append('profileImage', this.profileImage);\r\n        this.subscriptions.push(this.userService.updateProfileImage(formData).subscribe((event) => {\r\n            this.reportUploadProgress(event);\r\n        }, (errorResponse) => {\r\n            this.sendNotification(NotificationType.ERROR, errorResponse.error.message);\r\n            this.fileStatus.status = 'done';\r\n        }));\r\n    }\r\n    reportUploadProgress(event) {\r\n        switch (event.type) {\r\n            case HttpEventType.UploadProgress:\r\n                this.fileStatus.percentage = Math.round(100 * event.loaded / event.total);\r\n                this.fileStatus.status = 'progress';\r\n                break;\r\n            case HttpEventType.Response:\r\n                if (event.status === 200) {\r\n                    this.user.profileImageUrl = `${event.body.profileImageUrl}?time=${new Date().getTime()}`;\r\n                    this.sendNotification(NotificationType.SUCCESS, `${event.body.firstName}\\'s profile image updated successfully`);\r\n                    this.fileStatus.status = 'done';\r\n                    break;\r\n                }\r\n                else {\r\n                    this.sendNotification(NotificationType.ERROR, `Unable to upload image. Please try again`);\r\n                    break;\r\n                }\r\n            default:\r\n                `Finished all processes`;\r\n        }\r\n    }\r\n    updateProfileImage() {\r\n        this.clickButton('profile-image-input');\r\n    }\r\n    onLogOut() {\r\n        this.authenticationService.logOut();\r\n        this.router.navigate(['/login']);\r\n        this.sendNotification(NotificationType.SUCCESS, `You've been successfully logged out`);\r\n    }\r\n    onResetPassword(emailForm) {\r\n        this.refreshing = true;\r\n        const emailAddress = emailForm.value['reset-password-email'];\r\n        this.subscriptions.push(this.userService.resetPassword(emailAddress).subscribe((response) => {\r\n            this.sendNotification(NotificationType.SUCCESS, response.message);\r\n            this.refreshing = false;\r\n        }, (error) => {\r\n            this.sendNotification(NotificationType.WARNING, error.error.message);\r\n            this.refreshing = false;\r\n        }, () => emailForm.reset()));\r\n    }\r\n    onDeleteUder(username) {\r\n        this.subscriptions.push(this.userService.deleteUser(username).subscribe((response) => {\r\n            this.sendNotification(NotificationType.SUCCESS, response.message);\r\n            this.getUsers(false);\r\n        }, (error) => {\r\n            this.sendNotification(NotificationType.ERROR, error.error.message);\r\n        }));\r\n    }\r\n    onEditUser(editUser) {\r\n        this.editUser = editUser;\r\n        this.currentUsername = editUser.username;\r\n        this.clickButton('openUserEdit');\r\n    }\r\n    searchUsers(searchTerm) {\r\n        const results = [];\r\n        for (const user of this.userService.getUsersFromLocalCache()) {\r\n            if (user.firstName.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1 ||\r\n                user.lastName.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1 ||\r\n                user.username.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1 ||\r\n                user.userId.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1) {\r\n                results.push(user);\r\n            }\r\n        }\r\n        this.users = results;\r\n        if (results.length === 0 || !searchTerm) {\r\n            this.users = this.userService.getUsersFromLocalCache();\r\n        }\r\n    }\r\n    get isAdmin() {\r\n        return this.getUserRole() === Role.ADMIN || this.getUserRole() === Role.SUPER_ADMIN;\r\n    }\r\n    get isManager() {\r\n        return this.isAdmin || this.getUserRole() === Role.MANAGER;\r\n    }\r\n    get isAdminOrManager() {\r\n        return this.isAdmin || this.isManager;\r\n    }\r\n    getUserRole() {\r\n        return this.authenticationService.getUserFromLocalCache().role;\r\n    }\r\n    sendNotification(notificationType, message) {\r\n        if (message) {\r\n            this.notificationService.notify(notificationType, message);\r\n        }\r\n        else {\r\n            this.notificationService.notify(notificationType, 'An error occurred. Please try again.');\r\n        }\r\n    }\r\n    clickButton(buttonId) {\r\n        document.getElementById(buttonId).click();\r\n    }\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach(sub => sub.unsubscribe());\r\n    }\r\n}\r\nUserComponent.ɵfac = function UserComponent_Factory(t) { return new (t || UserComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthenticationService), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.NotificationService)); };\r\nUserComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: UserComponent, selectors: [[\"app-user\"]], decls: 2, vars: 0, template: function UserComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"p\");\r\n        i0.ɵɵtext(1, \"user works!\");\r\n        i0.ɵɵelementEnd();\r\n    } }, styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 562:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nSyntaxError\\\\n\\\\n(7:55) C:\\\\\\\\Users\\\\\\\\Asus\\\\\\\\Desktop\\\\\\\\Projects\\\\\\\\UT\\\\\\\\SFinances-SE\\\\\\\\SFFrontend\\\\\\\\src\\\\\\\\app\\\\\\\\user\\\\\\\\user.component.css Unknown word\\\\n\\\\n \\\\u001b[90m 5 | \\\\u001b[39m    <div class=\\\\u001b[32m\\\\\\\"col-md-4\\\\\\\"\\\\u001b[39m>\\\\n \\\\u001b[90m 6 | \\\\u001b[39m      <h5>User Management Portal</h5>\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 7 | \\\\u001b[39m      <small *ngIf=\\\\u001b[32m\\\\\\\"titleAction$ | async as title\\\\\\\"\\\\u001b[39m>\\\\u001b[33m{\\\\u001b[39m\\\\u001b[33m{\\\\u001b[39m title \\\\u001b[33m}\\\\u001b[39m\\\\u001b[33m}\\\\u001b[39m</small>\\\\n \\\\u001b[90m   | \\\\u001b[39m                                                      \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 8 | \\\\u001b[39m    </div>\\\\n \\\\u001b[90m 9 | \\\\u001b[39m    <div class=\\\\u001b[32m\\\\\\\"col-md-4\\\\\\\"\\\\u001b[39m>\\\\n\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[562]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=user.component.css.map*/\"] });\r\n"]},"metadata":{},"sourceType":"module"}